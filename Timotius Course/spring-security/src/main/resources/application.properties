spring.application.name=spring-security
server.port=7001

logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(---){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

spring.datasource.url=jdbc:postgresql://localhost:5432/securitydb
spring.datasource.username=admin
spring.datasource.password=secret
spring.jpa.show-sql=true


#Enable TLS/SSL
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keys/apisecurity.p12
server.ssl.key-store-password=Kanhayya@108
server.ssl.key-alias=apisecurity
server.ssl.enabled=false

#Enable audit logging using spring oob filter
#this do not support parsing hence using loggly
#loggly provide parsing as well as viewing in its ui
#could have used logstash + elastic + kibana but for simplicity using loggly 
# loggly can do parsing, and sending logs to data store + view in ui in one tool
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG


